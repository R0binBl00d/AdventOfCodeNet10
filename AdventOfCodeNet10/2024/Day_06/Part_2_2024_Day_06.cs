using System.Diagnostics;
using System.Linq.Expressions;
using AdventOfCodeNet10.Extensions;

namespace AdventOfCodeNet10._2024.Day_06
{
  internal class Part_2_2024_Day_06 : Days
  {
    /// <summary>
    /*
    https://adventofcode.com/2024/day/6
    --- Day 6: Guard Gallivant ---
    The Historians use their fancy device again, this time to whisk you all away to
    the North Pole prototype suit manufacturing lab... in the year 1518! It turns
    out that having direct access to history is very convenient for a group of
    historians.
    
    You still have to be careful of time paradoxes, and so it will be important to
    avoid anyone from 1518 while The Historians search for the Chief.
    Unfortunately, a single guard is patrolling this part of the lab.
    
    Maybe you can work out where the guard will go ahead of time so that The
    Historians can search safely?
    
    You start by making a map (your puzzle input) of the situation. For example:
    
    ....#.....
    .........#
    ..........
    ..#.......
    .......#..
    ..........
    .#..^.....
    ........#.
    #.........
    ......#...
    The map shows the current position of the guard with ^ (to indicate the guard
    is currently facing up from the perspective of the map). Any obstructions -
    crates, desks, alchemical reactors, etc. - are shown as #.
    
    Lab guards in 1518 follow a very strict patrol protocol which involves
    repeatedly following these steps:
    
    If there is something directly in front of you, turn right 90 degrees.
    Otherwise, take a step forward.
    Following the above protocol, the guard moves up several times until she
    reaches an obstacle (in this case, a pile of failed suit prototypes):
    
    ....#.....
    ....^....#
    ..........
    ..#.......
    .......#..
    ..........
    .#........
    ........#.
    #.........
    ......#...
    Because there is now an obstacle in front of the guard, she turns right before
    continuing straight in her new facing direction:
    
    ....#.....
    ........>#
    ..........
    ..#.......
    .......#..
    ..........
    .#........
    ........#.
    #.........
    ......#...
    Reaching another obstacle (a spool of several very long polymers), she turns
    right again and continues downward:
    
    ....#.....
    .........#
    ..........
    ..#.......
    .......#..
    ..........
    .#......v.
    ........#.
    #.........
    ......#...
    This process continues for a while, but the guard eventually leaves the mapped
    area (after walking past a tank of universal solvent):
    
    ....#.....
    .........#
    ..........
    ..#.......
    .......#..
    ..........
    .#........
    ........#.
    #.........
    ......#v..
    By predicting the guard's route, you can determine which specific positions in
    the lab will be in the patrol path. Including the guard's starting position,
    the positions visited by the guard before leaving the area are marked with an X:
    
    ....#.....
    ....XXXXX#
    ....X...X.
    ..#.X...X.
    ..XXXXX#X.
    ..X.X.X.X.
    .#XXXXXXX.
    .XXXXXXX#.
    #XXXXXXX..
    ......#X..
    In this example, the guard will visit 41 distinct positions on your map.
    
    Predict the path of the guard. How many distinct positions will the guard visit
    before leaving the mapped area?
    
    Your puzzle answer was 5409.
    
    --- Part Two ---
    While The Historians begin working around the guard's patrol route, you borrow
    their fancy device and step outside the lab. From the safety of a supply
    closet, you time travel through the last few months and record the nightly
    status of the lab's guard post on the walls of the closet.
    
    Returning after what seems like only a few seconds to The Historians, they
    explain that the guard's patrol area is simply too large for them to safely
    search the lab without getting caught.
    
    Fortunately, they are pretty sure that adding a single new obstruction won't
    cause a time paradox. They'd like to place the new obstruction in such a way
    that the guard will get stuck in a loop, making the rest of the lab safe to
    search.
    
    To have the lowest chance of creating a time paradox, The Historians would like
    to know all of the possible positions for such an obstruction. The new
    obstruction can't be placed at the guard's starting position - the guard is
    there right now and would notice.
    
    In the above example, there are only 6 different positions where a new
    obstruction would cause the guard to get stuck in a loop. The diagrams of these
    six situations use O to mark the new obstruction, | to show a position where
    the guard moves up/down, - to show a position where the guard moves left/right,
    and + to show a position where the guard moves both up/down and left/right.
    
    Option one, put a printing press next to the guard's starting position:
    
    ....#.....    ....#.....
    ....+---+#    ....^>>>>#
    ....|...|.    ....^...v.
    ..#.|...|.    ..#.^...v.
    ....|..#|.    ..^>>>>#v.
    ....|...|.    ..^.^.v.v.
    .#.O^---+.    .#<<<<v<v.
    ........#.    .^>>>>>>#.
    #.........    #<<<<<vv..
    ......#...    ......#v..
    Option two, put a stack of failed suit prototypes in the bottom right quadrant
    of the mapped area:
    
    
    ....#.....    ....#.....
    ....+---+#    ....^>>>>#
    ....|...|.    ....^...v.
    ..#.|...|.    ..#.^...v.
    ..+-+-+#|.    ..^>>>>#v.
    ..|.|.|.|.    ..^.^.v.v.
    .#+-^-+-+.    .#<<<<v<v.
    ......O.#.    .^>>>>>>#.
    #.........    #<<<<<vv..
    ......#...    ......#v..
    Option three, put a crate of chimney-squeeze prototype fabric next to the
    standing desk in the bottom right quadrant:
    
    ....#.....    ....#.....
    ....+---+#    ....^>>>>#
    ....|...|.    ....^...v.
    ..#.|...|.    ..#.^...v.
    ..+-+-+#|.    ..^>>>>#v.
    ..|.|.|.|.    ..^.^.v.v.
    .#+-^-+-+.    .#<<<<v<v.
    .+----+O#.    .^>>>>>>#.
    #+----+...    #<<<<<vv..
    ......#...    ......#v..
    Option four, put an alchemical retroencabulator near the bottom left corner:
    
    ....#.....    ....#.....
    ....+---+#    ....^>>>>#
    ....|...|.    ....^...v.
    ..#.|...|.    ..#.^...v.
    ..+-+-+#|.    ..^>>>>#v.
    ..|.|.|.|.    ..^.^.v.v.
    .#+-^-+-+.    .#<<<<v<v.
    ..|...|.#.    .^>>>>>>#.
    #O+---+...    #<<<<<vv..  ???
    ......#...    ......#v..
    Option five, put the alchemical retroencabulator a bit to the right instead:
    
    ....#.....    ....#.....
    ....+---+#    ....^>>>>#
    ....|...|.    ....^...v.
    ..#.|...|.    ..#.^...v.
    ..+-+-+#|.    ..^>>>>#v.
    ..|.|.|.|.    ..^.^.v.v.
    .#+-^-+-+.    .#<<<<v<v.
    ....|.|.#.    .^>>>>>>#.
    #..O+-+...    #<<<<<vv..  ???
    ......#...    ......#v..
    Option six, put a tank of sovereign glue right next to the tank of universal
    solvent:
    
    ....#.....    ....#.....
    ....+---+#    ....^>>>>#
    ....|...|.    ....^...v.
    ..#.|...|.    ..#.^...v.
    ..+-+-+#|.    ..^>>>>#v.
    ..|.|.|.|.    ..^.^.v.v.
    .#+-^-+-+.    .#<<<<v<v.
    .+----++#.    .^>>>>>>#.
    #+----++..    #<<<<<vv..
    ......#O..    ......#v..  ???
    It doesn't really matter what you choose to use as an obstacle so long as you
    and The Historians can put it into position without the guard noticing. The
    important thing is having enough options that you can find one that minimizes
    time paradoxes, and in this example, there are 6 different positions you could
    choose.
    
    You need to get the guard stuck in a loop by adding a single new obstruction.
    How many different positions could you choose for this obstruction?
    
    Your puzzle answer was 2022.

    ########################################################################################################################################################

    my maps build from the example:
    
    movement    by hand     result 475  
    ....#.....  ....#.....  ..........
    ....^>>>>#  .........#  ..........
    ....^...v.  ..........  ..........
    ..#.^...v.  ..#.......  ..........
    ..^>>>>#v.  .......#..  ..........
    ..^.^.v.v.  ..........  ..........
    .#<<<<v<v.  .#.O^.....  ...O......
    .^>>>>>>#.  ......OO#.  ......OO..
    #<<<<<vv..  #O.O......  .O.O......
    ......#v..  ......#O..  .......O..


    0000000000
    0000111110
    0000100010
    0000100010
    0011111010
    0010101010
    0011111110
    0111111100
    0111111100
    0000000100
    */
    /// </summary>
    /// <returns>
    /// 5409 -> part 1
    /// (6) Test
    /// 475 - too low
    /// 2022 -> from an online solution !!
    /// 
    /// </returns>
    public override string Execute()
    {

      // Wenn ich an eine Kreuzung treffe, an der vorher schon mal einer nach rechts gegangen ist ...
      // -> war schon mal 1 in locationsVisited ...
      // nope ... anderer Ansatz:
      //
      // prinzipiell immer wenn irgendwas rechts auf ein Feld trifft, das schon mal in die selbe Richtung gelaufen ist ...

      string result = "";
      int totalCount = 0;

      char[,] field = new char[Lines[0].Length, Lines.Count];
      int[,] movement = new int[Lines[0].Length, Lines.Count];

      #region Calculated visited location
      Point currentLocation = new Point();
      //List<string> locationsVisited = new List<string>();
      List<List<int>> locationsVisited = new List<List<int>>();

      var potentialObjects = new List<(int x, int y)>();

      for (int y = 0; y < Lines.Count; y++)
      {
        locationsVisited.Add(new List<int>());
        for (int x = 0; x < Lines[0].Length; x++)
        {
          field[x, y] = Lines[y][x];
          movement[x, y] = 0;

          if (field[x, y] == '^')
          {
            currentLocation.X = x;
            currentLocation.Y = y;
            field[x, y] = '.';
          }
          locationsVisited[y].Add(0);
        }
      }

      potentialObjects.Clear();
      DoMove(ref locationsVisited, currentLocation, ref movement, ref field, ref potentialObjects, out var outside, out var loop);
      #endregion

      foreach (List<int> yLists in locationsVisited)
      {
        foreach (var xitem in yLists)
        {
          totalCount += xitem;
        }
      }

      if (totalCount != potentialObjects.Count)
      {
        Debugger.Break();
      }

      // can't place one at the start
      potentialObjects.RemoveAt(potentialObjects.IndexOf((currentLocation.X ,currentLocation.Y)));

      totalCount = 0;
      foreach (var po in potentialObjects)
      {
        var tempField = new char[Lines[0].Length, Lines.Count];
        int[,] moves = new int[Lines[0].Length, Lines.Count];

        for (int xn = 0; xn < Lines[0].Length; xn++)
        {
          for (int yn = 0; yn < Lines.Count; yn++)
          {
            tempField[xn, yn] = field[xn, yn];
            moves[xn, yn] = 0;
          }
        }
        tempField[po.x, po.y] = '#';

        var fck = new List<(int x, int y)>();
        DoMove(ref locationsVisited, currentLocation, ref moves, ref tempField, ref fck, out _, out loop);
        if (loop) totalCount++;
      }


      result = totalCount.ToString();
      return result;
    }

    private void DoMove(ref List<List<int>> locationsVisited, Point currentLocation, ref int[,] movement, ref char[,] field, ref List<(int x, int y)> potentialObjects, out bool outside, out bool loop)
    {
      outside = false;
      loop = false;

      int orientation = 0;
      // 0 Top
      // 1 Right
      // 2 Bottom
      // 3 Left
      Point newlocation = new Point();
      do // move
      {
        locationsVisited[currentLocation.Y][currentLocation.X] = 1;
        if (!potentialObjects.Contains((currentLocation.X, currentLocation.Y)))
        {
          potentialObjects.Add((currentLocation.X, currentLocation.Y));
        }
        switch (orientation)
        {
          case 0: // Top
            if ((movement[currentLocation.X, currentLocation.Y] & 0x1) == 0x1) loop = true;
            break;
          case 1: // Right
            if ((movement[currentLocation.X, currentLocation.Y] & 0x2) == 0x2) loop = true;
            break;
          case 2: // Bottom
            if ((movement[currentLocation.X, currentLocation.Y] & 0x4) == 0x4) loop = true;
            break;
          case 3: // Left
            if ((movement[currentLocation.X, currentLocation.Y] & 0x8) == 0x8) loop = true;
            break;
        }
        if (loop == true) break;

        switch (orientation)
        {
          case 0: // Top
            movement[currentLocation.X, currentLocation.Y] |= 0x1;
            break;
          case 1: // Right
            movement[currentLocation.X, currentLocation.Y] |= 0x2;
            break;
          case 2: // Bottom
            movement[currentLocation.X, currentLocation.Y] |= 0x4;
            break;
          case 3: // Left
            movement[currentLocation.X, currentLocation.Y] |= 0x8;
            break;
        }

        newlocation = new Point(currentLocation.X, currentLocation.Y);

        switch (orientation)
        {
          case 0: // Top
            newlocation.Y--;
            break;
          case 1: // Right
            newlocation.X++;
            break;
          case 2: // Bottom
            newlocation.Y++;
            break;
          case 3: // Left
            newlocation.X--;
            break;
        }

        if (!NextLocationIsInside(newlocation))
        {
          outside = true;
          break;
        }

        if (field[newlocation.X, newlocation.Y] == '.')
        {
          currentLocation.X = newlocation.X;
          currentLocation.Y = newlocation.Y;
          continue;
        }
        else if (field[newlocation.X, newlocation.Y] == '#')
        {
          orientation++;
          orientation %= 4;
          /*
          switch (orientation)
          {
            case 0: // Top
              currentLocation.Y--;
              break;
            case 1: // Right
              currentLocation.X++;
              break;
            case 2: // Bottom
              currentLocation.Y++;
              break;
            case 3: // Left
              currentLocation.X--;
              break;
          }
          */
        }
        else
        {
          /*
          for (int y = 0; y < Lines.Count; y++)
          {
            Debug.Write("\n");
            for (int x = 0; x < Lines[0].Length; x++)
            {
              Debug.Write($"{movement[x, y]}");
            }
          }
          */
          Debugger.Break();
        }

      } while (true);
    }

    private bool NextLocationIsInside(Point currentLocation)
    {
      if (
        currentLocation.X < 0 ||
        currentLocation.Y < 0 ||
        currentLocation.X == Lines[0].Length ||
        currentLocation.Y == Lines.Count
      )
      {
        return false;
      }
      return true;
    }
  }
}


/*
"""

Debugger-Plot from Part1.
Helped me to understand what's going on ...

..#.........#...#......#...........#.#...#............#...#.........#....#......................#......#..........................
...........#....#.............#......^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#............................................#.....#..........
.................#.........#.......#.^.....#..#............#.......v.#.........#............................................#.....
......#..............................^.#......^>>>>>>>>>>>>>>>>>>>>v>>>>>>>>>>>>>#................................................
#...............................##...^..#.#...^....................v..#.........v..........#...#...............#.................#
.............#......#................^........^.................#..v...........#v.........#..............#........................
...#...................#.............^#.......^#.......#..........#v............v...........#.#.....#.....#.......................
#.#...#.............................#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<v<<<<<<<<<<<<v.....#..............#............#...............
......^>>>>>>>>>>>>>>>>>>>>>>#.......#........^....#......#........v......#.....#.................................................
......^.....................v.......#.........^....................v......#.................#........#..........#.#..#...........#
......^...............#.....v#................^..............#.....v...........#.......#......................#.......#...........
...#..^...........#.........v..........#......^.....#........^>>##.v#..................^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#.......
....#.^.......#.............v.................^...#..........^.v.^>v>>>>>>>>>>>>>>>>>>>^>>>>>>>>>>>#.....................v....#...
......^.......#.....#.......v.................^..............^.v.^.v..................#^.#.....##.v.....#................v........
......^..#....#.....^>>>>>##v.................^..............^.v.^.v..#......#.........^..........v#..........#.......#..v........
..#...^#..........#.^....v.^v>>>>>>>>>>>>>>>>>^>>>>>>>>>>>>>>>>>>>>v>>>>>>>>>>>>>>>>#..^.#........v...#............#..^>>>>>#.....
......^.....#.#....#^....v.^v..#.............#^..........#...^.v.^.v........#.....#v...^.^>>>>>>>>>>>>>>>>>>>>>>>>>>#.^..v.v#.....
......^...#.......#.^....v.^v.................^#........#....^.v.^.v#.......#...#..v.#.^.^....#...v.........##.#...v..^..v.v#.....
......^............#^....v.^v#....#...........^..............^.v.^.v............^>>>>>>^>^>>>>>>>>>>>>>>#.#........v.#^..v.v......
.#...#^#............^....v#^v^>>>>>>>>>>>>>>>>^>>>>>>>>>>>>>>>>>>>>v>>>>>>#.....^..v...^.^........v...#v...........v..^..v.v.#....
......^..#..........^...#v.^v^....#.......#.#.^....##........^.v.^.v...#.v....#.^.#v.#.^.^.......#v....v...........v..^#.v.v......
......^.............^....v.^v^.#.............#^.#......#.....^.v.^.v#....v.....#^.^>>>>^>^>>>>>>>>>>>>#v.........#.v..^..v.v...#..
......^...#.....#...^....v.^v^.............#..^..............^.v.^.v.....v......^.^v...^.^....#.#.v#.v.v.#.........v..^..v.v......
......^.....#..##...^....v.^v^................^...#..........^.v.^.v...#.v...#..^.^v...^.^......^>>>>>>>>>>>>>>>>>>>>#^..v.v......
......^.........^>>>>>#.#v.^v^..............#.^....#.........^.v.^.v...^>>>>>>>>>>>>>>>^>^>>>>>>^>>>>>>>>>>>>>>>>>#vv.^..v.v......
......^#........^...^v..^v>>v>>>>>>>>>>>>>>>>>^>>>>>>>>>>>>>>>>>>>>v>>>^>>>>>>>>^>^>>#.^.^......^.v..v.v.........v.vv.^..v.v......
......^.#.......^...^v..^v#<v<<<<<<<<<<<<<<<<<^<<<<<<<<<<<<<<<<<<<<v<<<^<v.....#^.^vv..^.^......^.v..v.v.........v.vv.^#.v.v##.#..
......^.^>>>>>>>^>#.^v..^v..v^.............#..^...#..##....#.^.v.^.v.#.^.##..#..^.^vv..^.^......^.v..v.v.........v#vv.^..v.v......
......^.^....#..^v..^v..^v..v^.............^>>^>>>>>>>>>>>>>>>>>>>>v>>>^>>>>>>>>^>^>>>>^>^>>##..^#v..v.v#........v.vv.^..v#v......
......^.^.......^v..^v..^v..v^....#.#......^..^..............^.v.^.v...^........^.^vv..^.^.v....^.v..v.v.........v#vv.^..v.v......
......^.^..#....^v..^v..^v..v^.............^.#<<<<<<<<<<<<<<<<<<<<<v<<<<<<<<<<<<<<<<<<<^<<<<<<<<^<<<<<<<<<<<<<<<<<<vv#^..v.v#.....
.....#<<<<<<<<<<^v..^v..^v..v^.............^.................^.v.^#v...^........^.^vv..^.^.v....^.v..v.v.........v.#v.^..v.v......
.....#..^.......^#.#<v<<<v<<v^#............^.#...............^.v.^.v...^#.......^.^vv..^.^.v....^.v..v.v.........v..v.^..v#v......
....#...^....#..^#...v..^v..#^.#...........^.................^.v.^.v...^........^.^vv..^.^.v....^.v..v.v..#......v..v.^..v.v......
........^.......^^>>>v>>^v>>>^>>>>>>>>>>>>>^>>>>>>>>>>>>>>>>>>>>>>>v>>>^>#.....#<<^<<<<^<^<v....^.v..v.v.........v..v.^#.v.v#.....
........^......#^^.#.v#.^v..#^.............^........#........^.v.^.v..#^v......#..^vv..^.^##....^.v..v.v.........v..v.^..v.v....#.
........^.......^^...v.#^v..#^..#..........^.......#.........^.v.^.v..#^v.........^vv..^.^......^.v..v.v....#....v..v.^..v#v......
........^..#..#.^^#..v..^v...^..^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#.......^vv..^.^......^.v#.v.v.........v..v.^..v#v......
........^.......^^...v..^v...^..^..........^.#...............^.v...v...^vv........^vv..^.^......^.v^>>>>>>>>>>>>>>>>v>^>>v>v>>>#..
......#.^.#.....^^..#v..^v...^..^..........^..............#..^.v...v...^vv........^vv..^.^......^.v^.v.v..#..#...v#.v.^..v#v..v...
...#....^.^>>>>>^>>>>v>>^v>>>^>>^>>>>>>>>>>^>>>>>>>>>>>>>>#..^.v...v...^vv..#..#..^vv..^.^......^.v^.v.v.........v..v.^..v.v.#v...
.....#..^.^.....^^...v..^v..#<<<^<<<<<<<<<<^<<<<<<<<<<<<<v...^.v...v#..^vv........^vv..^.^......^.v^.v.v.........v#.v.^#.v.v..v...
...#....^.^.....^^...v..^v......^..........^.............#...^.v#..v#..^vv..#....#^vv..^.^......^.v^.v.v........#v..v#^..v.v..v...
......#.^.^.#...^^#..v..^v....#.^.#........^.......#.....^>>>^>v>>>v>>>^vv>>>>>>>>^vv>>^>^>>>>>#^.v^.v.v.........v..v.^..v.v..v...
........^.^.....^^...v..^v......^..#.......^.......#.....^...^.v...v...^vv........^vv..^.^....v.^.v^.v.v..#......v..v.^..v.v..v...
........^.^.....^^...v..^v....#.^.#^>>>>>>>^>>>>>>>>>>>>>>>>>>>>>>>v>>>^>v>>>>>>>>^>>>>^>^>#.#v.^.v^.v.v...#.....v..v.^..v.v..v...
......#.^.^...#.^^...v..^v.#..#.^..^.......^.........#..#^...^#v...v...^vv.......#^vv..^#<<<<<<<^<<<<<<<<<<<<<<<<<<<v<^<<v<v<<v...
#......#^.^.#...^^..#v..^v......^..^.....#.^...#.#.......^...^.v...v...^vv........^vv..^..v...v.^.v^.v.v.........v..v.^..v.v..#...
.#....#.^.^.....^^..^v>>^v>>>>>>^>>^>>>>>>#^.....^>>>>>>>>>>#^.v...v...^vv.......#<<<<<^<<<<<<<<^<<^<v<v.........v..v.^..v#v......
........^.^.....^^..^v..^v......^..^.....v.^#....^.......^.v.^.v...v...^vv......#..vv..^#.v...v.^.v^.v.#.........v..v.^..v.v.....#
........^.^.##..^^..^v.#<v<<<<<<^<<^<<<<<<<^<<<<<^<<<<<<<<<v<<<<<<<v<<<^<v<<<<<<<<<vv..^..v...v.^.v^.v#.........#v..v.^..v.v......
##......^.^.^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#.....^.v.^.v...v...^vv.#.#.....#v..^..v...v.^.v^.v...........v..v.^..v.v......
........^.^.^...^^..^v...v.#....^..^..#..v#^#....^v......^.v.^.v...v..#^vv..........v..^..v...v.^.v^.v..##.....#.v..v.^..v.v......
........^.^.^#..^^..^v..#v......^..^.....v.^.....^v......^.v.^.v.#.v...^vv....#.....v..^..v#..v.^.v^.v..^>>>>>>>>>>>v>>>>>>>>>>>>#
........^.^.^...^^..^v..^v>>>>>>^>>^>>>>>>>^>>>>>^v>>#...^.v.^.v...v...^vv..........v..^..v...v.^.v^.v.#^........v..v.^..v.v....v.
.....#..^.^.^...^^..^v..^v......^..^.....v.^..#..^v.v....^.v.^.v...v...^vv..#...#...v..^..v...v.^.v^.v#.^........v..v.^..v.v....v.
.......#^.^.^...^^..^v..^v......^..^.....v#^.....^v.v.#..^.v.^#v...v#..^vv..^>>>>>>>>>>^>>>>>>>>^>>^>v>>^>>>>#...v..v#<<<v.v....v.
........^.^.^#..^^..^v..^v......^..^.#...v.^.....^v.v....^.v#^.v..#v...^vv#.^.......v..^..v...v.^.v^.v..^...v#..#v..v....#.v....v.
........^.^.^^>>^>>>>v>>>>>>>>>>^>>>>>>>>>>>>>>>>^v>>>>#.^.v.^#v...v...^vv..^.#.....v..^#.v...v.^.v^.v#.^...v....v.#v......v....v.
....#...^.^.^^..^^..^v..^v......^..^#.#..v.^.....^v.v.v..^.v#^.v...v...^vv..^.......v..^..v...v.^.v^.v..^...v....v.^v>>>>>>v>>#.v#
........^.^.^^..^^..^v..^v.#....^..^#....v.^.....^v.v.v..^.v.^.v...v...^vv..^..#....v..^..v...v.^.v^.v..^...v....v.^v...#..v.v..v.
....#...^.^.^^..^^..^v..^v......^..^.....v.^.....^v.v.v..^.v.^.v...v...^vv..^.......v..^..v...v.^.v^.v..^...v....v.^v......v.v..v.
.##.....^.^#^^..^^.#^v..^v......^..^..#.#v.^.#...^v.v.v..^.v.^.v...v...^vv..^.......v..^..v...v.^.v^.v..^..#v##..v.^v......v.v..v.
.#..#...^.^.^^..^^..^v..^v..##..^..^....^>>^>>>>>^v>>>v>>>>v>>>>>>>v>>>^>v>>>>>>>>>>>>#^..v...v.^.v^.v..^...v....v.^v.#....v.v..v.
.....#.#^.^.^^..^^..^v#.^v......^..^....^v.^.....^v.v.v..^.v.^.v..#v...^vv..^.......vv.^..v...v.^.v^.v..^...v....v.^v......v.v..v.
.....#.#^.^.^^..^^..^v..^v......^..^#...^v.^.....^v.v.v..^.v.^.v...v...^vv..^.......vv.^..v...v.^.v^.v..^...v....v.^v......v.v..v.
........^.^.^^..^^..^v#.^v......^..^....^v.^.....^v#v.v.#<<v<^<v<<<v<<<^vv<<^<<<<<<<vv<^<<v<<<v<^<v^.v..^...v....v.^v#.....v.v..v.
.......#<<<<^^<<^<<<<v<<<v<<<<<<^<<<<<<<<<<<<<<<<^v<<<v<<<<v<<<<<<<v...^vv..^..#....vv.^..v...v.^.#^.v##<<<<<<<<<<<<v<<<<<<v.v..v.
..........^.^^.#<<<<<v<<<<<<<<<<<<<<<<<<<<<<<<<<<<v<<<<<<<<v.^.v...#...^vv..^.......vv.^..v...v.^..^.v...#..v....v.^v....#.#.v..v.
....#.....^.^^.#.^..^v.#^v#.....^..^....^v.^.....^v.v.v....#.^.v.......^vv..^.......vv.^..v...v.^..^.v......v....v.^v........v..v.
#......##.^.^^...^..^v.^>>>>>>>>>>>>>>>>>>>>>>>>>^v>>>>>>>>>>>>>>>>>>>>>>>>#^..#....vv.^..v...v.^..^.v..#...v....v.^v........v..v.
..........^.^^...^..^v.^^v......^.#<<<<<^<<^<<<<<^v<<<v<<<<<<<<<<<<<<<<^<vv<^<<<<<<<vv.^..v...v.^..^.v.....#v....v.^v..#.....v#.v.
.#........^.^^...^..^v#^^v.#....^.......^v.^.....^v.v.v......^#v.#.....^vvv.^.......#v#^..v...v.^..^.v......v.#..v.^v........v..v.
......#..#<<^^<<<<<<<v<^<v<<<<<<^<<<<<<<^<<^<<<<<^v<v.v......^.v.......^vvv.^........v.^..v...v.^..^.v....##v....v.^v........v..v.
.....##.....^^.#.^#.^v.^^v......^.......^v#^.....^v.#.v......^.v.#....#<<vv<<<<<<<<<<<<^<<<<<<<<^<<^<v......v....v.^v........v..v.
............^^.#.^..^v.^^v.#....^.......^v.^.#...^v...v..#...^.v...#....vvv.^........v.^..v#..v.^..^.#......v....v.^v........v#.v.
............^^...^..^v.^^v......^.......^v.^.^>>>^v>>>>>>>>>>>>>>>>>>>>>>vv>>>>>>>>>>>>^>>>>#.v#<<<<<<<<<<<<<<<<<<<<v<<<<<<<<<<<v.
............^^...^..^v.^^v......^.......^v#^.^...^v...v.#..#.^.v........vvv#^........v.^..vv..v....^.....#.#v....v#^v........v..#.
............^^...^..^v#^^v......^..#....^v.^.^#..^v...v......^.v........vvv.^........v.^..vv..v....^.......#v..#.v.^v........v..#.
...........#^^...^..^v.^^v.....#<<<<<<<<<<<<<<<<<^v<<<<<<<<<<<<<<<<<<<<<<vv<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<v........v....
.......#....^^...^..^v.^^v......#.......^v.^.^...^v...v......^.v........vvv.^........v.^..vv..v...#^........v....v.^#........v....
#...##......^^...^..^v#<<<<<<<<<<<<<<<<<<<<<<<<<<^v<<<<<<<<<<<<<<<<<<<<<<vv.^........v.^..vv.#v....^........v....v.^.........v#...
...#.....#..^^...^..^v..^v.......#...#..^v.^.^...^v.#.v......^.v........v#v.^......#.v.^..vv.#v....^........v....v.^.........v....
....#.......^^...^..^v..^v..............^v#^.^...^v...v......^.v........v.v.^......^>v>^>>>v>>>>>>>^>>>>>>>>>>>>>v>^>>>>#....v....
.........#..^^...^..^v..^v..............^v.^.^...^v...v......^.v........v.v.^......^.v.^#.vv..v....^...#....v....v.^...v.....v....
............^^...^..^v..^v.........#.#..^v.^.^...^v..#v......^.v........v.v.^......^.v.^..vv..v....^........v....v.^...v.....v##..
.........#..^^...^..^v#.^v...........#..^v.^.^...^v..^v>>>>>>>>>>>>>>>>>>>v>^>>>>>>^>v>^>>>v>>>>>>>^>>>>>>>>v>>>#v.^#..v.....v....
.....#......^^...^..^v..^v...#..#....#.#^v.^.^...^v..^v.....#<<v<<<<<<<<v<v<^<<<<<<^<v<^<<vv<<v....^...#....v..v.v.^...v.....v....
.....^>>>>>>^^>>>>>>>v>>>>>>>>>>>>>>>>>#^v.^.^..#^v..^v...#....v........v.v.^...#..^.v.^..vv..#....^......#.v..v.v.^...v..#..v....
.....^......^^..#<<<^v<<^v<<<<<<<<<<<<v<^v<^<^<<<^v<<^v<<<<<<<<v........v.v.^......^.v.^..vv.......^........v..v.v.^...v.....v....
.....^.#....^^......^v..^v............v.^v.^#^...^v..^v........#........v.v#^....#.^.v.^..vv.......^.......#v..v.v.^...v.....v....
.....^......^^.....#<v<<^v<<<<<<<<<<<<v<^v<^<^<<<^v<<^v<<<<<<<<<<<<<<<<<v.v.^......^#v.^..vv.......^#.......v..v.v.^.#.v.....v....
.....^....#.^^.......v..^v........#...v.^v.^.^...^v..^v..#...........#..#.v.^....#.^.v#^..vv.......^........v..v#v.^...v.....v....
.....^......^^.....#.v..^v............v.^v.^#^...^v.#<v<<<<<<<<<<<<<<<<<<<v<^<<<<<<^<v<^<<vv.......^.#......v..v.v.^...v.....v....
.....^......^^.......v.#^v............v.^v.^.^...^v.^>v>>>>>>>>>>>>>>>>>>>v>>>#....^.v.^..#v......#<<<<<<<<<<<<<<v.^..#v.....v....
.....^..#...^^.....#.v..^v..#......#..v.^v.^.^...^v.^.v...#...............v.^v.....^.v.^...v.....#..........v..v.#.^...v.....v....
.....^......^^.......v..^v............v.^v.^.^...^v.^.v....#...#..........v.^v.....^.v.^...v................v..v...^...v.....v....
.....^......^^.......v.#<v<<<<<<<<<<<<v<^v.^.^#..^v.^.v....#..#....#...#..v.^v.....^.v.^...v........#.......v..v...^...v.....v....
.#.#.^......^^.....#.v...v....#.......v.^##^.^...^v#<<v<<<<<<<<<<<<<<<<<<<v<<v<<<<<<<v.^...v................v..v...^...v.....v....
##...^.....#^^.......v...v......#.....v.^..^.^...^v.#.v.......#...........v.^v.....^.##<<<<v.............#..v..v...^...v.#...v....
.#...^......^^.......v..#v..#...#.....v.^..^.^...^v...v#............#.....v.^v.....^.......#................v#.v...^...v.....v..#.
#....^......^^.......v...v.....#^>>>>>>>>>>>>^>>>^v>>>v>>>>>>>>>>>>>>>#...v.^v..#.#<<<<<<<<<<<<<<<<<<<<<<<<<v..v...^...v.....v....
.....^.....#^^..#....v.#.v.....#^.....v.^..^.^...^v...v...#..........v....v.^v.......................#......#..v...^...v.#..#v....
.....^......^^.......v...v......^.....v.^..^.^...^v...v..............v....v.^v..................#.......#......v...^...v.....v....
....#<<<<<<<^^<<<<<<<v<<<v......^.....v#^..^.^...^v...v...........#..v....v.^v......................#...#...#..v...^...v.....v....
............^^.......v.#.#..#...^.....v.^..^.^...^v...v...#.#........v....v.^v..........#......#..........#....v...^...v.....v....
...##.......^^.......v..........^.....v.^..^#<<<<^v<<<v........#.....v....v.^v......#..........................v...^...v.....v....
...#.......#<<<<<<<<<v..........^...#.v.^..^...##^v...#............#.v....v.^v............#....................v...^...v.....v..#.
......#......^.......#..........^.....v.^..^.....^v#.................v....v.^v...................#.............v...^...v.....v.#..
#............^..................^.....v.^..^#....^v.#....#.#.........v#...v.^v.#............#..................v...^#..v....#v....
.............^....#.......#.....^.....v#^..^.#...^v.^>>>>>>>>>>>>>>>>v>>>>v>>v>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#...v...^...v.....v....
.#...........^..................^.....v.^..^.....^v.^................v....v.^v.........#..................v....v...^...v...#.v....
...........#.^.......#.#........^.....v.^#.^.....^v.^...............#v....v.^v............................v....v.#.^...v.##..v....
.............^.........#......#.^.....v.^..^.....^v.^................v....v.^v..#........................#v....v...^...v...#.v....
.............^....#.............^.....v.^..^.....^v.^................v....v#<v<<<<<<<<<<<<<<<<<<<<<<<<<<<<v<<<<v...^...v....#v...#
.............^.................#<<<<<<v#^..^#....^v.^.#..........#...v.#..v..v............................v....#..#<<<<v.....v....
......##.....^..........##...#.^>>#...#.^.#<<<<<<^v<<<<<<<<<<<<<<<<<<v<<<<v<<v............................v............#.....v....
.............^.........#.......^.v..#...^........^v.^................v..#.v..#.......#....................v........#.........v....
.............^.........^>>>>>>#<<v<<<<<<<<<<<<<<<^v<<<<<<<<<<<<<<<<<<v....v.............#........#........v....#.............v....
.............^.........^#....v...v......^........^v.^................#....v.............#.....#...........v.......#..........v....
............#^.....#...^.....v...v......^........^v#<<<<<<<<<<<<<<<<<<<<<<v<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<v<<<<<<<<<<<<<<<<<<v...#
.#.........#.^.......#.^.....v.#.v.....#^#..#...#<v<<<<<<<<<<<<<<<<<<<<<<<v.....#.......#.........#.......v..................#....
.............^.........^#....v...v......^.........v.......................#...............................v....##......#..........
....#.......#<<<<<<<<<<^<<<<<v<<<v##...#<<<<<<<<<<v<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<v.......................
.......................^.....v...#................v......................#.......................#.#......#.......................
.#.............#.......^.....v....#...............v...........#.................#...........................................#.....
.....#.........#.......^.....v..#..........#..#...v......#......................#...#......................#....#.................
.................#.....^#....v....................v...........................................#...................................
......................#<<<<<<v<<<<<<<<<<<<<<<<<<<<v...........................#..#......#..............#..#..#..........#.........
.............................v.#.........#........#..................#.#.........#.#.#........#..#.........#....##...#............



0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000100000000111111111111111111111111111111111110000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000100000000100000000000000000000100000000000010000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000100000000100000000000000000000100000000000010000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000100000000100000000000000000000100000000000010000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000
0000001111111111111111111111100000000000000000100000000000000000000100000000000000000000000000000000000000000000000000000000000000
0000001000000000000000000000100000000000000000100000000000000000000100000000000000000000000000000000000000000000000000000000000000
0000001000000000000000000000100000000000000000100000000000000000000100000000000000000000000000000000000000000000000000000000000000
0000001000000000000000000000100000000000000000100000000000000111000100000000000000000001111111111111111111111111111111111100000000
0000001000000000000000000000100000000000000000100000000000000101011111111111111111111111111111111110000000000000000000000100000000
0000001000000000000000000000100000000000000000100000000000000101010100000000000000000001000000000010000000000000000000000100000000
0000001000000000000011111100100000000000000000100000000000000101010100000000000000000001000000000010000000000000000000000100000000
0000001000000000000010000101111111111111111111111111111111111111111111111111111111110001000000000010000000000000000000111111000000
0000001000000000000010000101100000000000000000100000000000000101010100000000000000010001011111111111111111111111111100100101000000
0000001000000000000010000101100000000000000000100000000000000101010100000000000000010001010000000010000000000000000100100101000000
0000001000000000000010000101100000000000000000100000000000000101010100000000000011111111111111111111111100000000000100100101000000
0000001000000000000010000101111111111111111111111111111111111111111111111100000010010001010000000010000100000000000100100101000000
0000001000000000000010000101110000000000000000100000000000000101010100000100000010010001010000000010000100000000000100100101000000
0000001000000000000010000101110000000000000000100000000000000101010100000100000010111111111111111111110100000000000100100101000000
0000001000000000000010000101110000000000000000100000000000000101010100000100000010110001010000000010010100000000000100100101000000
0000001000000000000010000101110000000000000000100000000000000101010100000100000010110001010000001111111111111111111110100101000000
0000001000000000111111000101110000000000000000100000000000000101010100011111111111111111111111111111111111111111110110100101000000
0000001000000000100011001111111111111111111111111111111111111111111111111111111111111001010000001010010100000000010110100101000000
0000001000000000100011001101111111111111111111111111111111111111111111111100000010111001010000001010010100000000010110100101000000
0000001011111111110011001100110000000000000000100000000000000101010100010000000010111001010000001010010100000000010110100101000000
0000001010000000110011001100110000000000000111111111111111111111111111111111111111111111111100001010010100000000010110100101000000
0000001010000000110011001100110000000000000100100000000000000101010100010000000010111001010100001010010100000000010110100101000000
0000001010000000110011001100110000000000000100111111111111111111111111111111111111111111111111111111111111111111111110100101000000
0000001111111111110011001100110000000000000100000000000000000101010100010000000010111001010100001010010100000000010010100101000000
0000000010000000100011111111110000000000000100000000000000000101010100010000000010111001010100001010010100000000010010100101000000
0000000010000000100001001100010000000000000100000000000000000101010100010000000010111001010100001010010100000000010010100101000000
0000000010000000111111111111111111111111111111111111111111111111111111111000000011111111111100001010010100000000010010100101000000
0000000010000000110001001100010000000000000100000000000000000101010100011000000000111001010000001010010100000000010010100101000000
0000000010000000110001001100010000000000000100000000000000000101010100011000000000111001010000001010010100000000010010100101000000
0000000010000000110001001100010011111111111111111111111111111111111111111100000000111001010000001010010100000000010010100101000000
0000000010000000110001001100010010000000000100000000000000000101000100011100000000111001010000001011111111111111111111111111111000
0000000010000000110001001100010010000000000100000000000000000101000100011100000000111001010000001011010100000000010010100101001000
0000000010111111111111111111111111111111111111111111111111000101000100011100000000111001010000001011010100000000010010100101001000
0000000010100000110001001100011111111111111111111111111111000101000100011100000000111001010000001011010100000000010010100101001000
0000000010100000110001001100000010000000000100000000000000000101000100011100000000111001010000001011010100000000010010100101001000
0000000010100000110001001100000010000000000100000000000001111111111111111111111111111111111111101011010100000000010010100101001000
0000000010100000110001001100000010000000000100000000000001000101000100011100000000111001010000101011010100000000010010100101001000
0000000010100000110001001100000010011111111111111111111111111111111111111111111111111111111000101011010100000000010010100101001000
0000000010100000110001001100000010010000000100000000000001000101000100011100000000111001011111111111111111111111111111111111111000
0000000010100000110001001100000010010000000100000000000001000101000100011100000000111001001000101011010100000000010010100101000000
0000000010100000110011111111111111111111110100000111111111110101000100011100000000111111111111111111111100000000010010100101000000
0000000010100000110011001100000010010000010100000100000001010101000100011100000000011001001000101011010000000000010010100101000000
0000000010100000110011001111111111111111111111111111111111111111111111111111111111111001001000101011010000000000010010100101000000
0000000010101111111111111111111111111111111111111110000001010101000100011100000000001001001000101011010000000000010010100101000000
0000000010101000110011000100000010010000010100000110000001010101000100011100000000001001001000101011010000000000010010100101000000
0000000010101000110011000100000010010000010100000110000001010101000100011100000000001001001000101011010011111111111111111111111110
0000000010101000110011001111111111111111111111111111100001010101000100011100000000001001001000101011010010000000010010100101000010
0000000010101000110011001100000010010000010100000110100001010101000100011100000000001001001000101011010010000000010010100101000010
0000000010101000110011001100000010010000010100000110100001010101000100011100111111111111111111111111111111111000010010111101000010
0000000010101000110011001100000010010000010100000110100001010101000100011100100000001001001000101011010010001000010010000001000010
0000000010101111111111111111111111111111111111111111111001010101000100011100100000001001001000101011010010001000010010000001000010
0000000010101100110011001100000010010000010100000110101001010101000100011100100000001001001000101011010010001000010111111111110010
0000000010101100110011001100000010010000010100000110101001010101000100011100100000001001001000101011010010001000010110000001010010
0000000010101100110011001100000010010000010100000110101001010101000100011100100000001001001000101011010010001000010110000001010010
0000000010101100110011001100000010010000010100000110101001010101000100011100100000001001001000101011010010001000010110000001010010
0000000010101100110011001100000010010000111111111111111111111111111111111111111111111101001000101011010010001000010110000001010010
0000000010101100110011001100000010010000110100000110101001010101000100011100100000001101001000101011010010001000010110000001010010
0000000010101100110011001100000010010000110100000110101001010101000100011100100000001101001000101011010010001000010110000001010010
0000000010101100110011001100000010010000110100000110101001111111111111111111111111111111111111111111010010001000010110000001010010
0000000011111111111111111111111111111111111111111111111111111111111100011100100000001101001000101001010011111111111111111111010010
0000000000101100111111111111111111111111111111111111111111110101000000011100100000001101001000101001010000001000010110000000010010
0000000000101100010011001100000010010000110100000110101000000101000000011100100000001101001000101001010000001000010110000000010010
0000000000101100010011011111111111111111111111111111111111111111111111111110100000001101001000101001010000001000010110000000010010
0000000000101100010011011100000010011111111111111111111111111111111111111111111111111101001000101001010000001000010110000000010010
0000000000101100010011011100000010000000110100000110101000000101000000011110100000000101001000101001010000001000010110000000010010
0000000000111111111111111111111111111111111111111111101000000101000000011110100000000101001000101001010000001000010110000000010010
0000000000001100010011011100000010000000110100000110001000000101000000011111111111111111111111111111110000001000010110000000010010
0000000000001100010011011100000010000000110100000110001000000101000000001110100000000101001000101001000000001000010110000000010010
0000000000001100010011011100000010000000110101111111111111111111111111111111111111111111111100101111111111111111111111111111111110
0000000000001100010011011100000010000000110101000110001000000101000000001110100000000101001100100001000000001000010110000000010000
0000000000001100010011011100000010000000110101000110001000000101000000001110100000000101001100100001000000001000010110000000010000
0000000000001100010011011100000011111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000010000
0000000000001100010011011100000000000000110101000110001000000101000000001110100000000101001100100001000000001000010100000000010000
0000000000001100010011011111111111111111111111111111111111111111111111111110100000000101001100100001000000001000010100000000010000
0000000000001100010011001100000000000000110101000110001000000101000000001010100000000101001100100001000000001000010100000000010000
0000000000001100010011001100000000000000110101000110001000000101000000001010100000011111111111111111111111111111111111110000010000
0000000000001100010011001100000000000000110101000110001000000101000000001010100000010101001100100001000000001000010100010000010000
0000000000001100010011001100000000000000110101000110001000000101000000001010100000010101001100100001000000001000010100010000010000
0000000000001100010011001100000000000000110101000110011111111111111111111111111111111111111111111111111111111111010100010000010000
0000000000001100010011001100000000000000110101000110011000000111111111111111111111111111111111100001000000001001010100010000010000
0000011111111111111111111111111111111110110101000110011000000001000000001010100000010101001100000001000000001001010100010000010000
0000010000001100011111111111111111111111111111111111111111111111000000001010100000010101001100000001000000001001010100010000010000
0000010000001100000011001100000000000010110101000110011000000000000000001010100000010101001100000001000000001001010100010000010000
0000010000001100000011111111111111111111111111111111111111111111111111111010100000010101001100000001000000001001010100010000010000
0000010000001100000001001100000000000010110101000110011000000000000000000010100000010101001100000001000000001001010100010000010000
0000010000001100000001001100000000000010110101000110011111111111111111111111111111111111111100000001000000001001010100010000010000
0000010000001100000001001100000000000010110101000110111111111111111111111111110000010101000100000001111111111111110100010000010000
0000010000001100000001001100000000000010110101000110101000000000000000000010110000010101000100000000000000001001000100010000010000
0000010000001100000001001100000000000010110101000110101000000000000000000010110000010101000100000000000000001001000100010000010000
0000010000001100000001001111111111111111110101000110101000000000000000000010110000010101000100000000000000001001000100010000010000
0000010000001100000001000100000000000010100101000110111111111111111111111111111111111101000100000000000000001001000100010000010000
0000010000001100000001000100000000000010100101000110001000000000000000000010110000010001111100000000000000001001000100010000010000
0000010000001100000001000100000000000010100101000110001000000000000000000010110000010000000000000000000000001001000100010000010000
0000010000001100000001000100000011111111111111111111111111111111111111000010110000011111111111111111111111111001000100010000010000
0000010000001100000001000100000010000010100101000110001000000000000001000010110000000000000000000000000000000001000100010000010000
0000010000001100000001000100000010000010100101000110001000000000000001000010110000000000000000000000000000000001000100010000010000
0000011111111111111111111100000010000010100101000110001000000000000001000010110000000000000000000000000000000001000100010000010000
0000000000001100000001000000000010000010100101000110001000000000000001000010110000000000000000000000000000000001000100010000010000
0000000000001100000001000000000010000010100101111111111000000000000001000010110000000000000000000000000000000001000100010000010000
0000000000001111111111000000000010000010100100000110000000000000000001000010110000000000000000000000000000000001000100010000010000
0000000000000100000000000000000010000010100100000110000000000000000001000010110000000000000000000000000000000001000100010000010000
0000000000000100000000000000000010000010100100000110000000000000000001000010110000000000000000000000000000000001000100010000010000
0000000000000100000000000000000010000010100100000110111111111111111111111111111111111111111111111111111111100001000100010000010000
0000000000000100000000000000000010000010100100000110100000000000000001000010110000000000000000000000000000100001000100010000010000
0000000000000100000000000000000010000010100100000110100000000000000001000010110000000000000000000000000000100001000100010000010000
0000000000000100000000000000000010000010100100000110100000000000000001000010110000000000000000000000000000100001000100010000010000
0000000000000100000000000000000010000010100100000110100000000000000001000010111111111111111111111111111111111111000100010000010000
0000000000000100000000000000000011111110100100000110100000000000000001000010010000000000000000000000000000100000000111110000010000
0000000000000100000000000000000111000000100111111111111111111111111111111111110000000000000000000000000000100000000000000000010000
0000000000000100000000000000000101000000100000000110100000000000000001000010000000000000000000000000000000100000000000000000010000
0000000000000100000000011111110111111111111111111111111111111111111111000010000000000000000000000000000000100000000000000000010000
0000000000000100000000010000010001000000100000000110100000000000000000000010000000000000000000000000000000100000000000000000010000
0000000000000100000000010000010001000000100000000110111111111111111111111111111111111111111111111111111111111111111111111111110000
0000000000000100000000010000010001000000100000000111111111111111111111111110000000000000000000000000000000100000000000000000000000
0000000000000100000000010000010001000000100000000010000000000000000000000000000000000000000000000000000000100000000000000000000000
0000000000000111111111111111111111000000111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000
0000000000000000000000010000010000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000010000010000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000010000010000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000010000010000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000011111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
"""
*/
